Running method validate_set_V(m = 13, d = 3) and generating using halves:

Summary:
given m = 13, d = 3
Calculations took 0 days, 0 hours, 0 minutes, 0 seconds, 4 miliseconds, 971 microseconds, 300 nanoseconds.
Z/mZ:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
Z/mZ*: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
All ascending & non-repeating tuple (size 6) combinations possible for the U set: 924
                      V set: contains 20 tuples
          all_are_pairs set: contains 20 tuples
         some_are_pairs set: contains 0 tuples
         none_are_pairs set: contains 0 tuples
         indecomposable set: contains 0 tuples
decomposable & no pairs set: contains 0 tuples
     exceptional_cycles set: contains 0 tuples

Print V set (contains 20 tuples): {
(1, 2, 3, 10, 11, 12)
(1, 2, 4, 9, 11, 12)
(1, 2, 5, 8, 11, 12)
(1, 2, 6, 7, 11, 12)
(1, 3, 4, 9, 10, 12)
(1, 3, 5, 8, 10, 12)
(1, 3, 6, 7, 10, 12)
(1, 4, 5, 8, 9, 12)
(1, 4, 6, 7, 9, 12)
(1, 5, 6, 7, 8, 12)
(2, 3, 4, 9, 10, 11)
(2, 3, 5, 8, 10, 11)
(2, 3, 6, 7, 10, 11)
(2, 4, 5, 8, 9, 11)
(2, 4, 6, 7, 9, 11)
(2, 5, 6, 7, 8, 11)
(3, 4, 5, 8, 9, 10)
(3, 4, 6, 7, 9, 10)
(3, 5, 6, 7, 8, 10)
(4, 5, 6, 7, 8, 9)
}

Print all_are_pairs (contains 20 tuples): {
(1, 5, 6, 7, 8, 12)
(2, 4, 5, 8, 9, 11)
(3, 5, 6, 7, 8, 10)
(1, 3, 4, 9, 10, 12)
(1, 2, 3, 10, 11, 12)
(1, 3, 6, 7, 10, 12)
(3, 4, 5, 8, 9, 10)
(1, 4, 5, 8, 9, 12)
(1, 3, 5, 8, 10, 12)
(3, 4, 6, 7, 9, 10)
(4, 5, 6, 7, 8, 9)
(2, 3, 6, 7, 10, 11)
(1, 2, 6, 7, 11, 12)
(2, 3, 4, 9, 10, 11)
(1, 2, 5, 8, 11, 12)
(1, 4, 6, 7, 9, 12)
(2, 5, 6, 7, 8, 11)
(2, 3, 5, 8, 10, 11)
(2, 4, 6, 7, 9, 11)
(1, 2, 4, 9, 11, 12)
}

Print some_are_pairs (contains 0 tuples): {
}

Print none_are_pairs (contains 0 tuples): {
}

Print indecomposable (contains 0 tuples): {
}

Print decomposable but no pairs (contains 0 tuples): {
}

Print exceptional cycles (contains 0 tuples): {
}

method validate_set_V(13, 3) ran to completion.
