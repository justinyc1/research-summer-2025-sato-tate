Running method validate_set_V(m = 17, d = 5) and generating using halves:

Summary:
given m = 17, d = 5
Calculations took 0 days, 0 hours, 0 minutes, 0 seconds, 4 miliseconds, 899 microseconds, 200 nanoseconds.
Z/mZ:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
Z/mZ*: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
All ascending & non-repeating tuple (size 10) combinations possible for the U set: 8008
                      V set: contains 56 tuples
          all_are_pairs set: contains 56 tuples
         some_are_pairs set: contains 0 tuples
         none_are_pairs set: contains 0 tuples
         indecomposable set: contains 0 tuples
decomposable & no pairs set: contains 0 tuples
     exceptional_cycles set: contains 0 tuples

Print V set (contains 56 tuples): {
(1, 2, 3, 4, 5, 12, 13, 14, 15, 16)
(1, 2, 3, 4, 6, 11, 13, 14, 15, 16)
(1, 2, 3, 4, 7, 10, 13, 14, 15, 16)
(1, 2, 3, 4, 8, 9, 13, 14, 15, 16)
(1, 2, 3, 5, 6, 11, 12, 14, 15, 16)
(1, 2, 3, 5, 7, 10, 12, 14, 15, 16)
(1, 2, 3, 5, 8, 9, 12, 14, 15, 16)
(1, 2, 3, 6, 7, 10, 11, 14, 15, 16)
(1, 2, 3, 6, 8, 9, 11, 14, 15, 16)
(1, 2, 3, 7, 8, 9, 10, 14, 15, 16)
(1, 2, 4, 5, 6, 11, 12, 13, 15, 16)
(1, 2, 4, 5, 7, 10, 12, 13, 15, 16)
(1, 2, 4, 5, 8, 9, 12, 13, 15, 16)
(1, 2, 4, 6, 7, 10, 11, 13, 15, 16)
(1, 2, 4, 6, 8, 9, 11, 13, 15, 16)
(1, 2, 4, 7, 8, 9, 10, 13, 15, 16)
(1, 2, 5, 6, 7, 10, 11, 12, 15, 16)
(1, 2, 5, 6, 8, 9, 11, 12, 15, 16)
(1, 2, 5, 7, 8, 9, 10, 12, 15, 16)
(1, 2, 6, 7, 8, 9, 10, 11, 15, 16)
(1, 3, 4, 5, 6, 11, 12, 13, 14, 16)
(1, 3, 4, 5, 7, 10, 12, 13, 14, 16)
(1, 3, 4, 5, 8, 9, 12, 13, 14, 16)
(1, 3, 4, 6, 7, 10, 11, 13, 14, 16)
(1, 3, 4, 6, 8, 9, 11, 13, 14, 16)
(1, 3, 4, 7, 8, 9, 10, 13, 14, 16)
(1, 3, 5, 6, 7, 10, 11, 12, 14, 16)
(1, 3, 5, 6, 8, 9, 11, 12, 14, 16)
(1, 3, 5, 7, 8, 9, 10, 12, 14, 16)
(1, 3, 6, 7, 8, 9, 10, 11, 14, 16)
(1, 4, 5, 6, 7, 10, 11, 12, 13, 16)
(1, 4, 5, 6, 8, 9, 11, 12, 13, 16)
(1, 4, 5, 7, 8, 9, 10, 12, 13, 16)
(1, 4, 6, 7, 8, 9, 10, 11, 13, 16)
(1, 5, 6, 7, 8, 9, 10, 11, 12, 16)
(2, 3, 4, 5, 6, 11, 12, 13, 14, 15)
(2, 3, 4, 5, 7, 10, 12, 13, 14, 15)
(2, 3, 4, 5, 8, 9, 12, 13, 14, 15)
(2, 3, 4, 6, 7, 10, 11, 13, 14, 15)
(2, 3, 4, 6, 8, 9, 11, 13, 14, 15)
(2, 3, 4, 7, 8, 9, 10, 13, 14, 15)
(2, 3, 5, 6, 7, 10, 11, 12, 14, 15)
(2, 3, 5, 6, 8, 9, 11, 12, 14, 15)
(2, 3, 5, 7, 8, 9, 10, 12, 14, 15)
(2, 3, 6, 7, 8, 9, 10, 11, 14, 15)
(2, 4, 5, 6, 7, 10, 11, 12, 13, 15)
(2, 4, 5, 6, 8, 9, 11, 12, 13, 15)
(2, 4, 5, 7, 8, 9, 10, 12, 13, 15)
(2, 4, 6, 7, 8, 9, 10, 11, 13, 15)
(2, 5, 6, 7, 8, 9, 10, 11, 12, 15)
(3, 4, 5, 6, 7, 10, 11, 12, 13, 14)
(3, 4, 5, 6, 8, 9, 11, 12, 13, 14)
(3, 4, 5, 7, 8, 9, 10, 12, 13, 14)
(3, 4, 6, 7, 8, 9, 10, 11, 13, 14)
(3, 5, 6, 7, 8, 9, 10, 11, 12, 14)
(4, 5, 6, 7, 8, 9, 10, 11, 12, 13)
}

Print all_are_pairs (contains 56 tuples): {
(1, 2, 3, 5, 7, 10, 12, 14, 15, 16)
(1, 2, 4, 6, 8, 9, 11, 13, 15, 16)
(1, 2, 5, 6, 8, 9, 11, 12, 15, 16)
(1, 2, 4, 5, 7, 10, 12, 13, 15, 16)
(1, 3, 4, 5, 6, 11, 12, 13, 14, 16)
(2, 4, 5, 6, 7, 10, 11, 12, 13, 15)
(1, 2, 3, 7, 8, 9, 10, 14, 15, 16)
(2, 3, 4, 6, 8, 9, 11, 13, 14, 15)
(1, 2, 3, 4, 5, 12, 13, 14, 15, 16)
(2, 3, 4, 7, 8, 9, 10, 13, 14, 15)
(3, 4, 5, 6, 8, 9, 11, 12, 13, 14)
(1, 2, 3, 6, 8, 9, 11, 14, 15, 16)
(1, 2, 3, 4, 6, 11, 13, 14, 15, 16)
(2, 4, 6, 7, 8, 9, 10, 11, 13, 15)
(1, 3, 4, 6, 7, 10, 11, 13, 14, 16)
(2, 3, 4, 5, 7, 10, 12, 13, 14, 15)
(2, 3, 4, 6, 7, 10, 11, 13, 14, 15)
(1, 2, 4, 7, 8, 9, 10, 13, 15, 16)
(2, 3, 5, 6, 8, 9, 11, 12, 14, 15)
(4, 5, 6, 7, 8, 9, 10, 11, 12, 13)
(1, 4, 5, 6, 7, 10, 11, 12, 13, 16)
(1, 3, 4, 5, 7, 10, 12, 13, 14, 16)
(1, 4, 5, 6, 8, 9, 11, 12, 13, 16)
(1, 2, 3, 6, 7, 10, 11, 14, 15, 16)
(2, 3, 5, 6, 7, 10, 11, 12, 14, 15)
(2, 3, 6, 7, 8, 9, 10, 11, 14, 15)
(2, 3, 5, 7, 8, 9, 10, 12, 14, 15)
(1, 2, 4, 5, 8, 9, 12, 13, 15, 16)
(1, 2, 3, 4, 7, 10, 13, 14, 15, 16)
(1, 2, 3, 5, 6, 11, 12, 14, 15, 16)
(1, 3, 4, 5, 8, 9, 12, 13, 14, 16)
(1, 3, 4, 6, 8, 9, 11, 13, 14, 16)
(2, 3, 4, 5, 6, 11, 12, 13, 14, 15)
(1, 3, 6, 7, 8, 9, 10, 11, 14, 16)
(2, 4, 5, 7, 8, 9, 10, 12, 13, 15)
(1, 3, 5, 6, 8, 9, 11, 12, 14, 16)
(1, 2, 4, 5, 6, 11, 12, 13, 15, 16)
(3, 4, 5, 6, 7, 10, 11, 12, 13, 14)
(1, 2, 5, 6, 7, 10, 11, 12, 15, 16)
(1, 2, 3, 4, 8, 9, 13, 14, 15, 16)
(1, 4, 6, 7, 8, 9, 10, 11, 13, 16)
(1, 5, 6, 7, 8, 9, 10, 11, 12, 16)
(3, 5, 6, 7, 8, 9, 10, 11, 12, 14)
(1, 3, 4, 7, 8, 9, 10, 13, 14, 16)
(1, 3, 5, 6, 7, 10, 11, 12, 14, 16)
(2, 3, 4, 5, 8, 9, 12, 13, 14, 15)
(3, 4, 5, 7, 8, 9, 10, 12, 13, 14)
(1, 2, 5, 7, 8, 9, 10, 12, 15, 16)
(1, 2, 6, 7, 8, 9, 10, 11, 15, 16)
(1, 3, 5, 7, 8, 9, 10, 12, 14, 16)
(1, 4, 5, 7, 8, 9, 10, 12, 13, 16)
(3, 4, 6, 7, 8, 9, 10, 11, 13, 14)
(2, 4, 5, 6, 8, 9, 11, 12, 13, 15)
(2, 5, 6, 7, 8, 9, 10, 11, 12, 15)
(1, 2, 3, 5, 8, 9, 12, 14, 15, 16)
(1, 2, 4, 6, 7, 10, 11, 13, 15, 16)
}

Print some_are_pairs (contains 0 tuples): {
}

Print none_are_pairs (contains 0 tuples): {
}

Print indecomposable (contains 0 tuples): {
}

Print decomposable but no pairs (contains 0 tuples): {
}

Print exceptional cycles (contains 0 tuples): {
}

method validate_set_V(17, 5) ran to completion.
