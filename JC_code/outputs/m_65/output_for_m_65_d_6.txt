Running method validate_set_V(m = 65, d = 6) and generating using halves:

Summary:
given m = 65, d = 6
Calculations took 0 days, 1 hour, 12 minutes, 23 seconds, 603 miliseconds, 774 microseconds, 200 nanoseconds.
Z/mZ:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
Z/mZ*: [64, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63]
All ascending & non-repeating tuple (size 12) combinations possible for the U set: 3284214703056
                      V set: contains 937440 tuples
          all_are_pairs set: contains 906192 tuples
         some_are_pairs set: contains 31200 tuples
         none_are_pairs set: contains 48 tuples
         indecomposable set: contains 0 tuples
decomposable & no pairs set: contains 48 tuples
     exceptional_cycles set: contains 31248 tuples

Print none_are_pairs (contains 48 tuples): {
(1, 2, 14, 15, 27, 28, 40, 41, 53, 54, 55, 60)
(1, 7, 14, 20, 27, 30, 33, 40, 46, 53, 59, 60)
(1, 9, 14, 20, 22, 27, 35, 40, 48, 53, 60, 61)
(1, 6, 14, 19, 27, 32, 35, 40, 45, 53, 58, 60)
(1, 10, 14, 15, 23, 27, 36, 40, 49, 53, 60, 62)
(4, 5, 17, 18, 30, 31, 40, 43, 44, 45, 56, 57)
(9, 10, 15, 20, 22, 23, 35, 36, 48, 49, 61, 62)
(5, 10, 15, 18, 23, 31, 36, 40, 44, 49, 57, 62)
(5, 10, 11, 12, 24, 25, 37, 38, 50, 51, 63, 64)
(3, 7, 16, 20, 29, 30, 33, 42, 46, 50, 55, 59)
(4, 10, 15, 17, 23, 30, 36, 43, 45, 49, 56, 62)
(8, 10, 11, 21, 24, 25, 34, 37, 47, 50, 60, 63)
(1, 4, 14, 17, 27, 30, 40, 43, 45, 53, 56, 60)
(3, 6, 16, 19, 29, 32, 35, 42, 45, 50, 55, 58)
(8, 9, 20, 21, 22, 25, 34, 35, 47, 48, 60, 61)
(2, 4, 15, 17, 28, 30, 41, 43, 45, 54, 55, 56)
(3, 4, 16, 17, 29, 30, 42, 43, 45, 50, 55, 56)
(6, 8, 19, 21, 25, 32, 34, 35, 45, 47, 58, 60)
(2, 5, 12, 15, 25, 28, 38, 41, 51, 54, 55, 64)
(5, 7, 12, 20, 25, 30, 33, 38, 46, 51, 59, 64)
(5, 6, 18, 19, 31, 32, 35, 40, 44, 45, 57, 58)
(3, 5, 16, 18, 29, 31, 40, 42, 44, 50, 55, 57)
(2, 8, 15, 21, 25, 28, 34, 41, 47, 54, 55, 60)
(9, 10, 11, 20, 22, 24, 35, 37, 48, 50, 61, 63)
(2, 6, 15, 19, 28, 32, 35, 41, 45, 54, 55, 58)
(3, 9, 16, 20, 22, 29, 35, 42, 48, 50, 55, 61)
(1, 10, 11, 14, 24, 27, 37, 40, 50, 53, 60, 63)
(1, 3, 14, 16, 27, 29, 40, 42, 50, 53, 55, 60)
(8, 10, 15, 21, 23, 25, 34, 36, 47, 49, 60, 62)
(6, 10, 11, 19, 24, 32, 35, 37, 45, 50, 58, 63)
(2, 5, 15, 18, 28, 31, 40, 41, 44, 54, 55, 57)
(4, 8, 17, 21, 25, 30, 34, 43, 45, 47, 56, 60)
(5, 7, 18, 20, 30, 31, 33, 40, 44, 46, 57, 59)
(5, 10, 12, 15, 23, 25, 36, 38, 49, 51, 62, 64)
(5, 9, 12, 20, 22, 25, 35, 38, 48, 51, 61, 64)
(5, 10, 11, 18, 24, 31, 37, 40, 44, 50, 57, 63)
(7, 8, 20, 21, 25, 30, 33, 34, 46, 47, 59, 60)
(3, 5, 12, 16, 25, 29, 38, 42, 50, 51, 55, 64)
(6, 10, 15, 19, 23, 32, 35, 36, 45, 49, 58, 62)
(5, 9, 18, 20, 22, 31, 35, 40, 44, 48, 57, 61)
(4, 10, 11, 17, 24, 30, 37, 43, 45, 50, 56, 63)
(2, 7, 15, 20, 28, 30, 33, 41, 46, 54, 55, 59)
(7, 10, 15, 20, 23, 30, 33, 36, 46, 49, 59, 62)
(4, 5, 12, 17, 25, 30, 38, 43, 45, 51, 56, 64)
(3, 8, 16, 21, 25, 29, 34, 42, 47, 50, 55, 60)
(7, 10, 11, 20, 24, 30, 33, 37, 46, 50, 59, 63)
(5, 6, 12, 19, 25, 32, 35, 38, 45, 51, 58, 64)
(2, 9, 15, 20, 22, 28, 35, 41, 48, 54, 55, 61)
}

Print indecomposable (contains 0 tuples): {
}

Print decomposable but no pairs (contains 48 tuples): {
(1, 2, 14, 15, 27, 28, 40, 41, 53, 54, 55, 60)
(1, 7, 14, 20, 27, 30, 33, 40, 46, 53, 59, 60)
(1, 9, 14, 20, 22, 27, 35, 40, 48, 53, 60, 61)
(1, 6, 14, 19, 27, 32, 35, 40, 45, 53, 58, 60)
(1, 10, 14, 15, 23, 27, 36, 40, 49, 53, 60, 62)
(4, 5, 17, 18, 30, 31, 40, 43, 44, 45, 56, 57)
(9, 10, 15, 20, 22, 23, 35, 36, 48, 49, 61, 62)
(5, 10, 15, 18, 23, 31, 36, 40, 44, 49, 57, 62)
(5, 10, 11, 12, 24, 25, 37, 38, 50, 51, 63, 64)
(3, 7, 16, 20, 29, 30, 33, 42, 46, 50, 55, 59)
(4, 10, 15, 17, 23, 30, 36, 43, 45, 49, 56, 62)
(8, 10, 11, 21, 24, 25, 34, 37, 47, 50, 60, 63)
(1, 4, 14, 17, 27, 30, 40, 43, 45, 53, 56, 60)
(3, 6, 16, 19, 29, 32, 35, 42, 45, 50, 55, 58)
(8, 9, 20, 21, 22, 25, 34, 35, 47, 48, 60, 61)
(2, 4, 15, 17, 28, 30, 41, 43, 45, 54, 55, 56)
(3, 4, 16, 17, 29, 30, 42, 43, 45, 50, 55, 56)
(6, 8, 19, 21, 25, 32, 34, 35, 45, 47, 58, 60)
(2, 5, 12, 15, 25, 28, 38, 41, 51, 54, 55, 64)
(5, 7, 12, 20, 25, 30, 33, 38, 46, 51, 59, 64)
(5, 6, 18, 19, 31, 32, 35, 40, 44, 45, 57, 58)
(3, 5, 16, 18, 29, 31, 40, 42, 44, 50, 55, 57)
(2, 8, 15, 21, 25, 28, 34, 41, 47, 54, 55, 60)
(9, 10, 11, 20, 22, 24, 35, 37, 48, 50, 61, 63)
(2, 6, 15, 19, 28, 32, 35, 41, 45, 54, 55, 58)
(3, 9, 16, 20, 22, 29, 35, 42, 48, 50, 55, 61)
(1, 10, 11, 14, 24, 27, 37, 40, 50, 53, 60, 63)
(1, 3, 14, 16, 27, 29, 40, 42, 50, 53, 55, 60)
(8, 10, 15, 21, 23, 25, 34, 36, 47, 49, 60, 62)
(6, 10, 11, 19, 24, 32, 35, 37, 45, 50, 58, 63)
(2, 5, 15, 18, 28, 31, 40, 41, 44, 54, 55, 57)
(4, 8, 17, 21, 25, 30, 34, 43, 45, 47, 56, 60)
(5, 7, 18, 20, 30, 31, 33, 40, 44, 46, 57, 59)
(5, 10, 12, 15, 23, 25, 36, 38, 49, 51, 62, 64)
(5, 9, 12, 20, 22, 25, 35, 38, 48, 51, 61, 64)
(5, 10, 11, 18, 24, 31, 37, 40, 44, 50, 57, 63)
(7, 8, 20, 21, 25, 30, 33, 34, 46, 47, 59, 60)
(3, 5, 12, 16, 25, 29, 38, 42, 50, 51, 55, 64)
(6, 10, 15, 19, 23, 32, 35, 36, 45, 49, 58, 62)
(5, 9, 18, 20, 22, 31, 35, 40, 44, 48, 57, 61)
(4, 10, 11, 17, 24, 30, 37, 43, 45, 50, 56, 63)
(2, 7, 15, 20, 28, 30, 33, 41, 46, 54, 55, 59)
(7, 10, 15, 20, 23, 30, 33, 36, 46, 49, 59, 62)
(4, 5, 12, 17, 25, 30, 38, 43, 45, 51, 56, 64)
(3, 8, 16, 21, 25, 29, 34, 42, 47, 50, 55, 60)
(7, 10, 11, 20, 24, 30, 33, 37, 46, 50, 59, 63)
(5, 6, 12, 19, 25, 32, 35, 38, 45, 51, 58, 64)
(2, 9, 15, 20, 22, 28, 35, 41, 48, 54, 55, 61)
}

method validate_set_V(65, 6) ran to completion.
