Running method validate_set_V(m = 29, d = 2) and generating using halves:

Summary:
given m = 29, d = 2
Calculations took 0 days, 0 hours, 0 minutes, 0 seconds, 6 miliseconds, 536 microseconds, 0 nanoseconds.
Z/mZ:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]
Z/mZ*: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]
All ascending & non-repeating tuple (size 4) combinations possible for the U set: 20475
                      V set: contains 91 tuples
          all_are_pairs set: contains 91 tuples
         some_are_pairs set: contains 0 tuples
         none_are_pairs set: contains 0 tuples
         indecomposable set: contains 0 tuples
decomposable & no pairs set: contains 0 tuples
     exceptional_cycles set: contains 0 tuples

Print V set (contains 91 tuples): {
(1, 2, 27, 28)
(1, 3, 26, 28)
(1, 4, 25, 28)
(1, 5, 24, 28)
(1, 6, 23, 28)
(1, 7, 22, 28)
(1, 8, 21, 28)
(1, 9, 20, 28)
(1, 10, 19, 28)
(1, 11, 18, 28)
(1, 12, 17, 28)
(1, 13, 16, 28)
(1, 14, 15, 28)
(2, 3, 26, 27)
(2, 4, 25, 27)
(2, 5, 24, 27)
(2, 6, 23, 27)
(2, 7, 22, 27)
(2, 8, 21, 27)
(2, 9, 20, 27)
(2, 10, 19, 27)
(2, 11, 18, 27)
(2, 12, 17, 27)
(2, 13, 16, 27)
(2, 14, 15, 27)
(3, 4, 25, 26)
(3, 5, 24, 26)
(3, 6, 23, 26)
(3, 7, 22, 26)
(3, 8, 21, 26)
(3, 9, 20, 26)
(3, 10, 19, 26)
(3, 11, 18, 26)
(3, 12, 17, 26)
(3, 13, 16, 26)
(3, 14, 15, 26)
(4, 5, 24, 25)
(4, 6, 23, 25)
(4, 7, 22, 25)
(4, 8, 21, 25)
(4, 9, 20, 25)
(4, 10, 19, 25)
(4, 11, 18, 25)
(4, 12, 17, 25)
(4, 13, 16, 25)
(4, 14, 15, 25)
(5, 6, 23, 24)
(5, 7, 22, 24)
(5, 8, 21, 24)
(5, 9, 20, 24)
(5, 10, 19, 24)
(5, 11, 18, 24)
(5, 12, 17, 24)
(5, 13, 16, 24)
(5, 14, 15, 24)
(6, 7, 22, 23)
(6, 8, 21, 23)
(6, 9, 20, 23)
(6, 10, 19, 23)
(6, 11, 18, 23)
(6, 12, 17, 23)
(6, 13, 16, 23)
(6, 14, 15, 23)
(7, 8, 21, 22)
(7, 9, 20, 22)
(7, 10, 19, 22)
(7, 11, 18, 22)
(7, 12, 17, 22)
(7, 13, 16, 22)
(7, 14, 15, 22)
(8, 9, 20, 21)
(8, 10, 19, 21)
(8, 11, 18, 21)
(8, 12, 17, 21)
(8, 13, 16, 21)
(8, 14, 15, 21)
(9, 10, 19, 20)
(9, 11, 18, 20)
(9, 12, 17, 20)
(9, 13, 16, 20)
(9, 14, 15, 20)
(10, 11, 18, 19)
(10, 12, 17, 19)
(10, 13, 16, 19)
(10, 14, 15, 19)
(11, 12, 17, 18)
(11, 13, 16, 18)
(11, 14, 15, 18)
(12, 13, 16, 17)
(12, 14, 15, 17)
(13, 14, 15, 16)
}

Print all_are_pairs (contains 91 tuples): {
(2, 14, 15, 27)
(5, 12, 17, 24)
(5, 11, 18, 24)
(7, 11, 18, 22)
(9, 11, 18, 20)
(10, 12, 17, 19)
(11, 14, 15, 18)
(2, 11, 18, 27)
(3, 10, 19, 26)
(8, 10, 19, 21)
(8, 12, 17, 21)
(2, 12, 17, 27)
(6, 14, 15, 23)
(1, 7, 22, 28)
(10, 14, 15, 19)
(13, 14, 15, 16)
(2, 6, 23, 27)
(1, 2, 27, 28)
(3, 12, 17, 26)
(4, 10, 19, 25)
(1, 9, 20, 28)
(4, 14, 15, 25)
(5, 10, 19, 24)
(3, 11, 18, 26)
(3, 13, 16, 26)
(1, 5, 24, 28)
(6, 13, 16, 23)
(1, 6, 23, 28)
(2, 4, 25, 27)
(3, 8, 21, 26)
(8, 13, 16, 21)
(10, 13, 16, 19)
(1, 8, 21, 28)
(6, 11, 18, 23)
(12, 14, 15, 17)
(4, 9, 20, 25)
(6, 10, 19, 23)
(8, 14, 15, 21)
(3, 4, 25, 26)
(3, 9, 20, 26)
(11, 13, 16, 18)
(7, 8, 21, 22)
(4, 12, 17, 25)
(9, 14, 15, 20)
(3, 7, 22, 26)
(7, 12, 17, 22)
(4, 13, 16, 25)
(5, 14, 15, 24)
(9, 13, 16, 20)
(2, 7, 22, 27)
(6, 7, 22, 23)
(9, 10, 19, 20)
(3, 6, 23, 26)
(2, 13, 16, 27)
(1, 14, 15, 28)
(10, 11, 18, 19)
(5, 9, 20, 24)
(6, 9, 20, 23)
(6, 12, 17, 23)
(7, 14, 15, 22)
(4, 5, 24, 25)
(2, 9, 20, 27)
(9, 12, 17, 20)
(4, 7, 22, 25)
(8, 11, 18, 21)
(1, 13, 16, 28)
(5, 8, 21, 24)
(5, 13, 16, 24)
(7, 10, 19, 22)
(2, 8, 21, 27)
(7, 13, 16, 22)
(5, 7, 22, 24)
(2, 10, 19, 27)
(1, 12, 17, 28)
(7, 9, 20, 22)
(3, 5, 24, 26)
(5, 6, 23, 24)
(6, 8, 21, 23)
(4, 8, 21, 25)
(8, 9, 20, 21)
(12, 13, 16, 17)
(4, 6, 23, 25)
(3, 14, 15, 26)
(1, 4, 25, 28)
(1, 3, 26, 28)
(1, 11, 18, 28)
(2, 3, 26, 27)
(1, 10, 19, 28)
(4, 11, 18, 25)
(11, 12, 17, 18)
(2, 5, 24, 27)
}

Print some_are_pairs (contains 0 tuples): {
}

Print none_are_pairs (contains 0 tuples): {
}

Print indecomposable (contains 0 tuples): {
}

Print decomposable but no pairs (contains 0 tuples): {
}

Print exceptional cycles (contains 0 tuples): {
}

method validate_set_V(29, 2) ran to completion.
